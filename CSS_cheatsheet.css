/*
CSS süntaks:

selektor 1, ... , selektor n {
    atribuut_1: väärtus_1;
    atribuut_2: väärtus_2;
    ...
    atribuut_n: väärtus_n
}


|HTML tag           |CSS selektor   |
|-----------------------------------|
|<tag>              |tag            |
|<tag class="class">|tag.class      |
|<_ class="class">  |.class         |
|<_ id="id">        |#id            |
|<tag attr=_>       |tag[attr]      |
|<_ attr=_>         |[attr]         |
|<tag attr="val">   |tag[attr="val"]|
|<_ attr="val">     |[attr="val"]   |
|<_>                |*              |
*/


.tekst {
    color: yellow; /* teksti värv */
    text-align: center; /* left | right | center | justify */
    
    font-style: normal; /* normal | italic | oblique */
    font-variant: normal; /* normal | small-caps */
    font-weight: normal; /* normal | bold */ 
    font-size: 15px;
    /* 
     * Teksti font. Kõigepealt proovib kuvada Times New Roman fonti,
     * kui see puudub, siis proovib Arial'i, kui see ka ei õnnestu siis
     * kasutab Verdana't.
     */
    font-family: "Times New Roman", Arial, Verdana;

    /* Et eelnevat lühemalt kirja panna */
    font: italic small-caps bold 12px/30px Georgia, serif;

    text-indent: 50px;
    line-height: 0.5;
    letter-spacing: -3px;
    word-spacing: 10px;

    text-decoration-line: underline; /* underline | overline | line-through | blink */
    text-decoration-style: solid; /* solid | double | dotted | dashed | wawy */
    text-decoration-color: blue;
    text-decoration-thickness: 10px;
    text-decoration: underline wavy red 10px;

    /* teksti vari: x-telg, y-telg, udune efekt, värv; */
    text-shadow: 2px 2px 5px red;
}


.taust {
    background-color: black;
    opacity: 0.5; /* Läbipaistvus */

    background-image: url('failitee/või/url');

    /* Kui taustapildi mõõtmed on väiksemad kui elemendi mõõtmed */
    background-repeat: repeat no-repeat; /* kordus-x-teljel   kordus-y-teljel */
    background-position: right top;
    background-attachment: fixed; /* fixed | scroll */

    /* Venitab taustapildi proportsioone selliselt, et kogu pilt täidab täpselt elemendi ära*/
    background-size: 100% 100%;
}


.piirid {
    /* Elemendi sisu mõõtmed. */
    height: 50px; /* auto */
    width: 25%; /* Veerand ümbritsevast elemendist */
    max-height: 100px;
    min-width: 100px;

    /* Ääris on joon, mis ümbritseb elemendi sisu. */

    /* Kõik äärised: laius stiil värv */
    border: 10px double green;
    /* Vasak ääris: laius stiil värv */
    border-left: 10px dotted green;

    /* Ääriste laiused: ülemine parem alumine vasak */
    border-width: 10px 11px 12px 13px;
    /* Ääriste stiilid: ülemine (vasak ja parem) alumine */
    border-style: solid dashed groove;
    /* Ääriste värvid: (ülemine ja alumine) (vasak ja parem) */
    border-color: blue red;

    /* Üksikud äärise atribuudid iga külje jaoks eraldi. */
    border-top-style: dotted;
    border-right-width: 10px;
    border-bottom-color: yellow;

    /* padding on ruum elemendi sisu ja äärise vahel */
    padding: 10px 11px 12px 13px; /* padding: 10px*/

    /* 
     * margin on ruum ümbritseva elemendi äärise ja selle elemendi äärise vahel.
     * Kui kahel elemendil, mis paiknevad HTML'is vahetult üksteise järel,
     * on erinev margin, on nende elementide ääriste vaheline kaugus suurim margin.
     */
    margin: 10px 11px 12px 13px; /* margin: 10px või margin: auto*/

    /*
     * Selline on minimaalne ruum, mis HTML element enda alla võtab:
     *
     * | margin | border | padding | elemendi sisu (height & width) | padding | border | margin |
     */
}


.paigutus {
    /*
     * none - peidab elemendi ära nii, et see ruumi ei võta.
     * block - lisab elemendi ette ja taha reavahetuse.
     *
     * inline - element võib asuda samal real teiste elementidega. Ei lase seadistada
     * atribuute height, width, float ja margin/padding-top/bottom.
     *
     * inline-block - sama mis inline, kuid kõik atribuudid on lubatud.
     */
    display: block;

    /*
     * Neid kasutatakse koos atribuudiga position.
     */
     top: 50px;
     bottom: 25%;
     left: auto;
     right: 10px;

    /*
     * Kasutatakse koos atribuudiga position. Kui elemendid üksteise sisse sõidavad,
     * siis suurema z-indeksiga element jääb peale. Kui z-indeks ei ole määratud, jääb
     * peale see, mis on HTML koodis viimane.
     */
    z-index: -1;

    /*
     * position: static; - Vaikeväärtus igal elemendil. Element paigutatakse selle elemendi sisse
     * mille sees ta HTML'is kirja on pandud. Samuti on olulised atribuudid margin, border, padding
     * ja display. Atribuudid top, right, bottom, left ja z-index ei tee midagi.
     *
     * position: relative; - top, right, bottom ja left nihutavad elementi tavalisest asukohast eemale.
     *
     * position: fixed; - Element paigutatakse brauseri akna järgi. top, left, bottom
     * ja right näitavad, kui kaugel elemendi ääred akna äärest asuvad. Skrollimine
     * ei muuda elemendi asukohta.
     *
     * position: absolute; - Element paigutatakse lähima ümbritseva elemendi järgi, millel on position
     * määratud. top, left, bottom ja right näitavad, kui kaugel elemendi ääred selle ümbritseva elemendi
     * äärtest asuvad.
     *
     * position: sticky; - vahetab positsioone väärtuste relative ja fixed vahel. Alguses on position: relative;
     * kuid kui skrollides jõuab elemendi äär piisavalt lähedale brauseri akna äärele (vastavalt top, left, bottom
     * ja right järgi), on position: fixed; 
     */
    position: static;

    /*
     * The overflow property specifies whether to clip the content or to add scrollbars when the content
     * of an element is too big to fit in the specified area. The property only works for block elements
     * with a specified height.
     *
     * visible - Default. The overflow is not clipped. The content renders outside the element's box.
     * hidden - The overflow is clipped, and the rest of the content will be invisible.
     * scroll - The overflow is clipped, and a scrollbar is added to see the rest of the content.
     * auto - Similar to scroll, but it adds scrollbars only when necessary.
     */
     overflow: scroll;

     /*
      * The float property is used for positioning and formatting content e.g.
      * let an image float left to the text in a container.
      */
    float: left;
}


/* Nummerdamata nimekiri */
ul {
    list-style-type: disc; /* none | disc | circle | square */
    list-style-position: outside; /* outside | inside */
}
/* Nummerdamata nimekirja element */
ul li {

}


/* Nummerdatud nimekiri */
ol {
    list-style-type: lower-alpha; /* lower-alpha | upper-roman */
}
/* Nummerdatud nimekirja element */
ol li {

}


table {
    /* Tabeli ja selle lahtrite piirid on ühised. */
    border-collapse: collapse;
}
table, td, th {
    /* Atribuudid tabeli ja selle lahtrite jaoks */
}


/*Lingid*/
a {
    color: red;
    /* ja kõik muud atribuudid*/
}
a:link {
    /* Kui linki ei ole veel klikitud. */
    color: green;
}  
a:visited {
    /* Kui linki on juba klikitud. */
    color: blue;
}
a:hover {
    /* Kui kursor on lingi peal. NB! a:link ja a:visited peavad olema enne seda defineeritud! */
    color: white;
}
a:active {
    /* Kui kursor on lingi peal ja hiirenuppu hoitakse all. NB! a:hover peab olema enne defineeritud! */
    color: lawngreen;
}